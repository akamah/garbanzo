parser.digit = do
  terminal { "string": "1" }
  w = $parser.whitespaces
  sub { "left":  {"@": "tocode", "string": "1" },
        "right": {"@": "tocode", "string": "0" } }
end

parser.expression.children.digit = parser.digit

parser.unquote = do
  terminal { "string": "%(" }
  expr = $parser.expression
  terminal { "string": ")"  }

  datastore {"object": {"@": "unquote", "value": expr }}
end

tmp = {"@": "datastore", "object": {"@": "choice", "children": {}}}
tmp.children.symbol = parser.symbol
parser.symbol = tmp
parser.symbol.children.unquote = parser.unquote



tmp = {"@": "datastore", "object": {"@": "choice", "children": {}}}
tmp.children.string = parser.string
tmp.children.symbol = parser.symbol

parser.key = tmp

print {hoge: "string"}

parser.addition = do
  x = $parser.digit
  terminal { "string": "+" }
  w = $parser.whitespaces
  e = $parser.expression
  result = {"@": "datastore", "object": {"@": "add"}}
  result.left = x
  result.right = e
end

insertprev { "object": parser.expression.children,
             "origin": {"@":"firstkey", "object": parser.expression.children},
	     "key":    "addition",
	     "value":  parser.addition }


homuhomu = "homu"
bouzu = {"man": "bouzuman"}
a = {"b": {"c": "abcdefg" } }

print homuhomu
print bouzu.man
print a.b.c

hogepoyo = do
  fst = "hoge"
  snd = "hige"
  print fst
  print snd
end

insertprev { "object": a, "origin": "b", "key": "g", "value": "hoge" }

print a
print 1+1+1

name = "poyoshi"
`%(name) = 1 + %(name)`

parser.increment = do
  name = $parser.symbol
  terminal { string: "++" }
  `%(name) = 1 + %(name)`
end

parser.donothing = do
  name = $parser.symbol
  terminal { string: "++" }
  `%(name) = %(name)`
end


parser.addrule = do
  target = $parser.path
  terminal { string: "|=" }
  name = $parser.symbol
  `%(target).children.%(name) = parser.%(name)`
end

parser.sentence.children.addrule = parser.addrule

parser.sentence.children.increment = parser.increment
parser.sentence |= increment




a = 1
a++
a++

print a

parser.notone = do
  terminal { string: "!=1" }
  print "notone"
  w = $parser.whitespaces
  e = $parser.expression
  datastore { object: {"@": "notequal", left: 1, right: e } }
end

parser.expression |= notone

print !=1 1
print !=1 a


i = 1+1+1+1+1
x = 1

while !=1 i
  print x
  x++
  i = {"@": "sub", "left": i, "right": 1 }
  parser.sentence.children.increment = parser.donothing
end

print "endloop"

print x
x++
print x
x++
print x


